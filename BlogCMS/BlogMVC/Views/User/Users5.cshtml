@model dynamic

@{
    ViewBag.Title = "Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Users</h2>

<script type="text/html" id="TableRow">
    <tr>
        <td data-bind="text: UserName"></td>
        <td data-bind="text: CreateDate"></td>
        <td data-bind="text: RoleName"></td>
    </tr>
</script>


<div data-bind="foreach: filters">
    <div>
        <strong data-bind="text: title"></strong>
        <input type="text" data-bind="value: param" />
    </div>
</div>

<table>
    <thead>
        <tr data-bind="foreach: headers">
            <th data-bind="click: $root.sort, text: title">
                <img scr="" />
            </th>
        </tr>
    </thead>
    <tbody data-bind="template: { name: 'TableRow', foreach: filteredRows }"></tbody>
</table>


<script type="text/javascript">

    var viewModel = function (itemsUrl, headers, filters) {
        var self = this;

        self.rows = ko.observableArray([]);

        self.filters = [
        { title: 'User name', filter: "UserName", param: ko.observable("") },
        { title: 'Create date', filter: "CreateDate", param: ko.observable("") },
        { title: 'Role name', filter: "RoleName", param: ko.observable("") }];
        self.headers = [
        { title: 'User name', sortPropertyName: 'UserName', asc: true, active: false },
        { title: 'Create date', sortPropertyName: 'CreateDate', asc: true, active: false },
        { title: 'Role name', sortPropertyName: 'RoleName', asc: true, active: false }];

        //Sorting

        self.sort = function (header, event) {
            if (header.active)
                header.asc = !header.asc;
            ko.utils.arrayForEach(self.headers, function (item) { item.active = false });
            header.active = true;

            var prop = header.sortPropertyName;
            var ascSort = function (a, b) { return a[prop] < b[prop] ? -1 : a[prop] > b[prop] ? 1 : 0 };
            var descSort = function (a, b) { return a[prop] > b[prop] ? -1 : a[prop] < b[prop] ? 1 : 0 };
            var sortFunc = header.asc ? ascSort : descSort;

            self.activeSort(sortFunc);
        };

        self.activeSort = ko.observable(function () { return 0; });

        self.filteredRows = ko.computed(function () {
            var temp = self.rows();

            for (var i = 0; i < self.filters.length; i++) {
                var filter = self.filters[i];
                if (filter.param() != "") {
                    temp = ko.utils.arrayFilter(temp, function (item) { return item[filter.filter] == filter.param(); });
                }
            }
            return temp.sort(self.activeSort());
        });




        $.getJSON(headers, function (data) {
            self.headers = data;
        });

        $.getJSON(filters, function (data) {
            self.filters = data;
        });

        $.getJSON(itemsUrl, function (data) {
            self.rows(data);
        });
    }

    ko.applyBindings(new viewModel("../../user/getusers"));
</script>